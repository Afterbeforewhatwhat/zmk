/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings =
        <&kp>,
        <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";

    esc {
      bindings = <&kp ESC>;
      key-positions = <1 2>;
      timeout-ms = <20>;
    };

    enter {
      bindings = <&kp ENTER>;
      key-positions = <22 21>;
      timeout-ms = <20>;
    };

    tab {
      bindings = <&kp TAB>;
      key-positions = <14 13>;
      timeout-ms = <20>;
    };

    alttab {
      bindings = <&kp LA(TAB)>;
      key-positions = <37 13>;
    };
  };

  macros {
    zed_em_kay: zed_em_kay {
      compatible = "zmk,behavior-macro";
      label = "ZM_zed_em_kay";
      #binding-cells = <0>;
      bindings =
        <&macro_press>,
        <&kp LSHFT>,
        <&macro_tap>,
        <&kp Z &kp M &kp K>,
        <&macro_release>,
        <&kp LSHFT>,
        <&macro_press>,
        <&macro_press>,
        <&kp>;
    };
    tabtabesc: tabtabesc {
      compatible = "zmk,behavior-macro";
      label = "new_macro";
      #binding-cells = <0>;
      bindings =
        <&macro_press>,
        <&kp>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
&none  &kp Q  &kp W     &kp F  &kp P          &kp G        &kp J      &kp L      &kp U    &kp Y  &kp BACKSPACE  &none
&none  &kp A  &kp R     &kp S  &kp T          &kp D        &kp H      &kp N      &kp E    &kp I          &kp O  &none
&none  &kp Z  &kp X     &kp C  &kp V          &kp B        &kp K      &kp M  &kp COMMA  &kp DOT      &kp RCTRL  &none
                     &kp LGUI  &mo 1  &kp BACKSPACE    &kp SPACE  &kp SPACE      &mo 2
      >;
    };

    raise {
      bindings = <
&none    &kp TAB  &kp N1  &kp N2  &kp N3  &kp KP_MULTIPLY    &trans  &trans  &trans  &trans  &trans  &none
&none   &kp PLUS  &kp N4  &kp N5  &kp N6     &kp KP_SLASH    &trans  &trans  &trans  &trans  &trans  &none
&none  &kp MINUS  &kp N7  &kp N8  &kp N9           &kp N0    &trans  &trans  &trans  &trans  &trans  &none
                          &trans  &trans           &trans    &trans   &mo 3  &trans
      >;
    };

    lower {
      bindings = <
&none        &trans        &trans        &trans        &trans        &trans    &trans  &kp C_MUTE    &kp UP  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none
&none        &trans        &trans        &trans        &trans    &bt BT_CLR    &trans    &kp LEFT  &kp DOWN          &kp RIGHT           &trans  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans      &trans    &trans             &trans           &trans  &none
                                         &trans         &mo 3        &trans    &trans      &trans    &trans
      >;
    };

    Layer__3 {
      bindings = <
&none  &trans  &kp Q   &kp W      &kp E   &kp R    &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &kp A   &kp S      &kp D   &kp F    &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &kp Z   &kp X      &kp C   &kp V    &trans  &trans  &trans  &trans  &trans  &none
                      &trans  &kp SPACE  &trans    &trans  &trans  &trans
      >;
    };
  };
};
